plugins {
    id 'org.springframework.boot' version '2.3.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'pmd'
}

group = 'com.epam.blast'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    mapstructVersion = "1.4.2.Final"
}

dependencies {

    //Spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "org.springdoc:springdoc-openapi-ui:$springDocVersion"
    implementation 'org.jetbrains:annotations:20.1.0'

    // JWT auth
    compile "com.auth0:java-jwt:$authJwtVersion"

    //Mapstruct
    compile "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //FlywayDb
    implementation 'org.flywaydb:flyway-core'

    //H2
    runtimeOnly 'com.h2database:h2'

    //Swagger
    implementation "io.springfox:springfox-swagger2:$swaggerVersion"
    implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"

    //Apache
    implementation "org.apache.commons:commons-collections4:$apacheCommonsCollectionsVersion"
    implementation "commons-fileupload:commons-fileupload:$apacheFileuploadVersion"

    //Thymeleaf
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.4.1'

    //Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testImplementation "org.junit.platform:junit-platform-commons:$junitPlatformCommonsVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.testng:testng:6.10", "org.easytesting:fest-assert:1.4"
    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.0.3'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '2.7.13'



}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

test {
    useJUnitPlatform()
}

jar {
    archiveName "blast-wrapper.jar"
    manifest {
        attributes(
                "Implementation-Version": "$archiveVersion")
    }
}

checkstyle {
    toolVersion "$checkstyleVersion"
}

pmd {
    toolVersion = "$pmdVersion"
    ruleSetFiles = files("$rootDir/config/pmd/pmd-ruleset.xml")
    ruleSets = []
    consoleOutput = true
}
